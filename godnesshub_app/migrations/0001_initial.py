# Generated by Django 5.1.3 on 2024-11-18 06:58

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DonationTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Username', models.CharField(blank=True, max_length=100, null=True)),
                ('Item', models.CharField(blank=True, max_length=100, null=True)),
                ('Submit', models.CharField(blank=True, max_length=100, null=True)),
                ('Date', models.DateField(blank=True, max_length=100, null=True)),
                ('Category', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InformationTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('Info', models.CharField(blank=True, max_length=100, null=True)),
                ('Date', models.DateField(blank=True, max_length=100, null=True)),
                ('Name', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ItemTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Item', models.CharField(blank=True, max_length=100, null=True)),
                ('Category', models.CharField(blank=True, max_length=100, null=True)),
                ('Image', models.FileField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='LoginTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Username', models.CharField(blank=True, max_length=100, null=True)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('Type', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ManageTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=100, null=True)),
                ('Location', models.CharField(blank=True, max_length=100, null=True)),
                ('Phone', models.BigIntegerField(blank=True, max_length=100, null=True)),
                ('Type', models.CharField(blank=True, max_length=100, null=True)),
                ('About', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Notification', models.CharField(blank=True, max_length=100, null=True)),
                ('Date', models.DateField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RequestTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Item', models.CharField(blank=True, max_length=100, null=True)),
                ('Request', models.CharField(blank=True, max_length=100, null=True)),
                ('Quantity', models.CharField(blank=True, max_length=100, null=True)),
                ('Date', models.DateField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WorkingstatusTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Workingstatus', models.CharField(blank=True, max_length=100, null=True)),
                ('Time', models.CharField(blank=True, max_length=100, null=True)),
                ('Date', models.DateField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='feedbackTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Review', models.CharField(blank=True, max_length=100, null=True)),
                ('Name', models.CharField(blank=True, max_length=100, null=True)),
                ('LOGINID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='godnesshub_app.logintable')),
            ],
        ),
        migrations.CreateModel(
            name='ComplaintTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Complaint', models.CharField(blank=True, max_length=100, null=True)),
                ('Reply', models.CharField(blank=True, max_length=100, null=True)),
                ('Submit', models.CharField(blank=True, max_length=100, null=True)),
                ('LOGINID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='godnesshub_app.logintable')),
            ],
        ),
        migrations.CreateModel(
            name='CampRegistrationTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=100, null=True)),
                ('Camp_no', models.IntegerField(blank=True, null=True)),
                ('Place', models.CharField(blank=True, max_length=100, null=True)),
                ('Idproof', models.FileField(blank=True, null=True, upload_to='')),
                ('Status', models.CharField(blank=True, max_length=100, null=True)),
                ('LOGINID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='godnesshub_app.logintable')),
            ],
        ),
        migrations.CreateModel(
            name='ResturantTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=100, null=True)),
                ('place', models.CharField(blank=True, max_length=100, null=True)),
                ('Post', models.CharField(blank=True, max_length=100, null=True)),
                ('Pin', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('Phone', models.BigIntegerField(blank=True, max_length=100, null=True)),
                ('Email', models.CharField(blank=True, max_length=100, null=True)),
                ('LOGINID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='godnesshub_app.logintable')),
            ],
        ),
        migrations.CreateModel(
            name='UserTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('User', models.CharField(blank=True, max_length=100, null=True)),
                ('Quantity', models.CharField(blank=True, max_length=100, null=True)),
                ('Date', models.DateField(blank=True, max_length=100, null=True)),
                ('Status', models.CharField(blank=True, max_length=100, null=True)),
                ('LOGINID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='godnesshub_app.logintable')),
            ],
        ),
    ]
